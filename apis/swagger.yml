swagger: '2.0'
info:
  description: >+
    This is an geometric API that allows server-side geometric processing
  version: '0.0.1'
  title: Remote Geometry

schemes:
  - http
basePath: /
produces:
  - application/json
consumes:
  - application/json
paths:
  /health:
    get:
      summary: Check the health of the service
      operationId: health
      description: |-
        Basic health check
      responses:
        200:
          description: Healthy
          schema:
            $ref: '#/definitions/HealthResult'
        503:
          description: Unhealthy
          examples:
            application/json: { "status": "fail" }
          schema:
            $ref: '#/definitions/HealthResult'
  
  /gm/v1/geometries/sphere:
    post:
      summary: Create a sphere
      description: >-
        Creates a sphere
      operationId: createsphere
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: request
          in: body
          description: request
          required: true
          schema:
            $ref: '#/definitions/CreateSphereRequest'
      responses:
        201:
          description: Geometry created successfully
          schema:
            $ref: '#/definitions/CreateGeometryResult'
        503:
          $ref: '#/responses/Standard503Error'

# Definitions of common responses
responses:
  Standard503Error:
    description: Unable to handle request at this time
    schema:
      $ref: '#/definitions/RestErrorObject'


definitions:
  HealthResult:
    type: object
    format: 'application/health+json'
    required:
      - status
    properties:
      status:
        description: >-
          "pass" if the service is healthy
          "fail" if the service is unhealthy
        type: string
        example: 'pass'
        enum:
          - pass
          - fail
  

  CreateSphereRequest:
    type: object
    description: >-
      Create a geometry
    required:
      - centre
      - radius
    properties:
      centre:
        description: >-
          Centre of sphere to create
        $ref: '#/definitions/Vector'
        
      radius:
        type: number
        format: double
        description: >-
          Radius of sphere to create

  CreateGeometryResult:
    type: object
    properties:
      id:
        type: string
        example: 'gm/v1/geometries/ee3b7c4b-c6a7-3f2b-9d1c-0fc6c76168bb'
        description: >-
          Geometry resource identifier in the form of
          'gm/v1/geometries/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx'
          
          Minimum API version: 1.0


  Vector:
    type: array
    items:
      type: number
    minItems: 3
    maxItems: 3


  RestErrorObject:
    type: object
    properties:
      error:
        type: string
        description: |-
          Error reason
          Minimum API version: 1.0
      message:
        type: string
        description: |-
          Exception message
          Minimum API version: 1.0
      path:
        type: string
        description: |-
          URL path where the error occurred
          Minimum API version: 1.0
      status:
        type: string
        description: |-
          HTTP status code
          Minimum API version: 1.0
      timestamp:
        type: string
        description: |-
          Date and time of the error
          Minimum API version: 1.0
